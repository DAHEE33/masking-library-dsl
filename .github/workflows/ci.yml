name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java: [ '8', '11', '17' ]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: gradle
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Run tests
      run: ./gradlew test
    
    - name: Generate Javadoc
      run: ./gradlew javadoc
    
    - name: Upload Javadoc
      uses: actions/upload-artifact@v4
      with:
        name: javadoc-${{ matrix.java }}
        path: build/docs/javadoc/
    
    - name: Build JAR
      run: ./gradlew build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.java }}
        path: build/libs/

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
    
    - name: Run security scan
      run: ./gradlew dependencyCheckAnalyze
    
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: build/reports/dependency-check-report.html

  publish:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
    
    - name: Publish to Maven Central
      run: ./gradlew publish
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        MAVEN_REPO_URL: ${{ secrets.MAVEN_REPO_URL }}
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## What's Changed
          
          ### Features
          - Action-based data protection library
          - Multiple masking strategies
          - Tokenization and encryption support
          - Comprehensive audit logging
          - Pipeline builder for complex workflows
          
          ### Technical
          - Java 8+ compatibility
          - Minimal dependencies
          - Comprehensive test coverage
          - Full Javadoc documentation
          
          ### Downloads
          - [JAR](https://github.com/${{ github.repository }}/releases/download/${{ github.ref }}/be_library-${{ github.ref_name }}.jar)
          - [Sources JAR](https://github.com/${{ github.repository }}/releases/download/${{ github.ref }}/be_library-${{ github.ref_name }}-sources.jar)
          - [Javadoc JAR](https://github.com/${{ github.repository }}/releases/download/${{ github.ref }}/be_library-${{ github.ref_name }}-javadoc.jar)
        draft: false
        prerelease: false 